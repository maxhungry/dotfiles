# Lots copy from junegunn 
# https://github.com/junegunn/dotfiles/blob/master/tmux.conf

# bind-key (alias: bind)
# set-window-option (alias: setw)

# ==============================================================================
# SESSION OPTIONS
# ==============================================================================
# Change default bind key
set -g prefix 'C-\'
bind-key 'C-\' send-prefix

# Index starts from 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# To paste from system clipboard
set-option -g default-command "reattach-to-user-namespace -l zsh"

# 256 colors
set -g default-terminal "screen-256color"

# No delay for escape key press
set -sg escape-time 0

# renumber windows after close
set -g renumber-windows on

# Reload tmux config
bind R source-file ~/.tmux.conf

# Load dev split script
bind D source-file ~/.tmux/dev

# Key binding in status line
set-option -g status-keys emacs

# ==============================================================================
# WINDOW OPTIONS
# ==============================================================================
# Automatically set window title
#setw -g automatic-rename on

# UTF-8
setw -g utf8 on

# Copy-mode
setw -g mode-mouse on
setw -g mode-keys vi

# Mouse
setw -g mouse-resize-pane on
setw -g mouse-select-pane on
setw -g mouse-select-window on

setw -g history-limit 10000
setw -g monitor-activity on
# set -g visual-activity on

# setw -g aggresive-resize on

# ==============================================================================
# KEY BINDINGS
# ==============================================================================
# Remap keys to vim-like navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind H resize-pane -L 10
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 10

bind M-h resize-pan -L
bind M-j resize-pan -D
bind M-k resize-pan -U
bind M-l resize-pan -R

# Create new window/panes and cd to current path
unbind %
unbind '"'
bind c new-window -c "#{pane_current_path}"
bind - split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# Break/join panes
bind j command-prompt -p "join pane from:" "join-pane -s ':%%'"
bind s command-prompt -p "send pane to:" "join-pane -t ':%%'"

# Copy-mode
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-pipe "pbcopy"

# Capture pane and open in Vim
bind M-c run 'tmux capture-pane -S -102400 -p > /tmp/tmux-capture.txt'\; new-window "view /tmp/tmux-capture.txt"
# bind-key M-c run "screencapture -l$(osascript -e 'tell app \"iTerm\" to id of window 1') -x -o -P /tmp/$(date +%Y%m%d-%H%M%S).png"

set-option -g allow-rename off

# Smart pane switching with vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys M-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys M-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys M-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys M-l) || tmux select-pane -R"
# bind -n M-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'M-\\') || tmux select-pane -l"

source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# Theming
# set -g status-bg black
# set -g status-fg cyan
# set -g window-status-current-bg cyan
# set -g window-status-current-fg black
# set -g window-status-current-attr bold
# set -g status-left-length 40
# set -g status-right-length 60
# set -g status-left '[#S] #(whoami)'
# set -g status-right '%H:%M %d-%h-%y'

